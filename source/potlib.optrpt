
    Report from: Interprocedural optimizations [ipo]

  WHOLE PROGRAM (SAFE) [EITHER METHOD]: false
  WHOLE PROGRAM (SEEN) [TABLE METHOD]: false
  WHOLE PROGRAM (READ) [OBJECT READER METHOD]: false

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000

In the inlining report below:
   "sz" refers to the "size" of the routine. The smaller a routine's size,
      the more likely it is to be inlined.
   "isz" refers to the "inlined size" of the routine. This is the amount
      the calling routine will grow if the called routine is inlined into it.
      The compiler generally limits the amount a routine can grow by having
      routines inlined into it.

Begin optimization report for: potdata._

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (potdata._) [1/27=3.7%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(3,8)

===========================================================================

Begin optimization report for: RESETEVALCOUNT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RESETEVALCOUNT) [2/27=7.4%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(280,14)

===========================================================================

Begin optimization report for: GETEVALCOUNT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETEVALCOUNT) [3/27=11.1%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(285,14)

===========================================================================

Begin optimization report for: FINALIZESURFGEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (FINALIZESURFGEN) [4/27=14.8%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(292,12)
  -> EXTERN: (295,14) for_write_seq_fmt
  -> EXTERN: (295,14) for_write_seq_fmt_xmit
  -> INLINE: (296,8) GETEVALCOUNT (isz = 2) (sz = 7)
  -> EXTERN: (297,3) for_write_seq_fmt_xmit
  -> EXTERN: (297,3) for_write_seq_fmt

===========================================================================

Begin optimization report for: INIT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (INIT) [5/27=18.5%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(108,17)
  -> EXTERN: (113,32) for_dealloc_allocatable
  -> EXTERN: (114,31) for_dealloc_allocatable
  -> EXTERN: (115,31) for_dealloc_allocatable
  -> EXTERN: (116,8) for_alloc_allocatable
  -> EXTERN: (116,8) for_check_mult_overflow64
  -> EXTERN: (117,8) for_alloc_allocatable
  -> EXTERN: (117,8) for_check_mult_overflow64
  -> EXTERN: (118,8) for_alloc_allocatable
  -> EXTERN: (118,8) for_check_mult_overflow64


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between potdata_mp_lastrgeom_ line 120 and potdata_mp_lastrgeom_ line 120
   remark #17106: parallel dependence: assumed OUTPUT dependence between potdata_mp_lastrgeom_ line 120 and potdata_mp_lastrgeom_ line 120
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference potdata_mp_lastrgeom_ has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(121,8)
<Peeled>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(121,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15389: vectorization support: reference potdata_mp_ldbounds_ has unaligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(122,10) ]
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(123,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 7 
   remark #15477: vector loop cost: 14.000 
   remark #15478: estimated potential speedup: 1.900 
   remark #15479: lightweight vector operations: 5 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(121,8)
<Remainder>
   remark #15389: vectorization support: reference potdata_mp_ldbounds_ has unaligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(122,10) ]
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(123,10) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(121,8)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(120,8):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: OPENTRAJFILE

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (OPENTRAJFILE) [6/27=22.2%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(301,12)
  -> EXTERN: (312,5) for_write_seq_fmt
  -> EXTERN: (312,5) for_write_seq_fmt_xmit
  -> EXTERN: (312,5) for_write_seq_fmt_xmit
  -> EXTERN: (312,5) for_write_seq_fmt_xmit
  -> INLINE: (314,10) GETEVALCOUNT (isz = 2) (sz = 7)
  -> EXTERN: (315,5) for_write_seq_fmt
  -> EXTERN: (315,5) for_write_seq_fmt_xmit
  -> EXTERN: (315,5) for_write_seq_fmt_xmit
  -> INLINE: (316,10) RESETEVALCOUNT (isz = 2) (sz = 5)
  -> EXTERN: (319,3) for_write_int_fmt
  -> EXTERN: (323,17) for_close
  -> EXTERN: (329,11) for_close
  -> EXTERN: (331,3) __resetsp_inlined
  -> EXTERN: (331,3) for_open
  -> EXTERN: (331,3) __getsp_inlined
  -> EXTERN: (331,31) for_trim
  -> EXTERN: (331,36) for_adjustl
  -> EXTERN: (331,49) for_concat
  -> EXTERN: (331,49) _alloca
  -> EXTERN: (335,5) for_open
  -> EXTERN: (335,5) __resetsp_inlined
  -> EXTERN: (335,5) __getsp_inlined
  -> EXTERN: (335,31) for_trim
  -> EXTERN: (335,36) for_adjustl
  -> EXTERN: (335,49) _alloca
  -> EXTERN: (335,49) for_concat
  -> EXTERN: (336,5) for_write_seq_fmt
  -> EXTERN: (337,5) for_write_seq_fmt
  -> EXTERN: (340,3) for_write_int_fmt
  -> EXTERN: (341,3) __resetsp_inlined
  -> EXTERN: (341,3) for_write_seq_fmt_xmit
  -> EXTERN: (341,3) memcpy
  -> EXTERN: (341,3) _alloca
  -> EXTERN: (341,3) _alloca
  -> EXTERN: (341,3) for_write_seq_fmt_xmit
  -> EXTERN: (341,3) for_write_seq_fmt
  -> EXTERN: (341,3) __getsp_inlined
  -> EXTERN: (342,27) for_trim
  -> EXTERN: (342,32) for_adjustl
  -> EXTERN: (342,45) for_concat
  -> EXTERN: (342,45) _alloca


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between 518 line 341 and 518 line 341
   remark #17106: parallel dependence: assumed FLOW dependence between 518 line 341 and 518 line 341
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 518 has aligned access
      remark #15389: vectorization support: reference progdata_mp_atoms_ has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between  line 341 and  line 341
   remark #17106: parallel dependence: assumed OUTPUT dependence between  line 341 and  line 341
   remark #17106: parallel dependence: assumed OUTPUT dependence between atomlabels line 341 and atomlabels line 341
   remark #17106: parallel dependence: assumed OUTPUT dependence between atomlabels line 341 and atomlabels line 341
   remark #17106: parallel dependence: assumed OUTPUT dependence between 520 line 341 and 520 line 341
   remark #17106: parallel dependence: assumed OUTPUT dependence between 520 line 341 and 520 line 341
   remark #15527: loop was not vectorized: function call to memcpy cannot be vectorized
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(341,3):remark #34000: call to memcpy implemented inline with loads and stores with proven source (alignment, offset): (1, 0), and destination (alignment, offset): (1, 0)
===========================================================================

Begin optimization report for: LOADREFGEOMS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (LOADREFGEOMS) [7/27=25.9%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(922,12)
  -> EXTERN: (922,12) _alloca
  -> EXTERN: (922,12) _alloca
  -> EXTERN: (922,12) _alloca
  -> EXTERN: (922,12) __getsp_inlined
  -> EXTERN: (931,3) for_write_seq_lis
  -> EXTERN: (932,3) for_alloc_allocatable
  -> EXTERN: (932,3) for_check_mult_overflow64
  -> EXTERN: (933,3) for_write_seq_lis_xmit
  -> EXTERN: (933,3) for_write_seq_lis_xmit
  -> EXTERN: (933,3) for_write_seq_lis_xmit
  -> EXTERN: (933,3) for_write_seq_lis
  -> EXTERN: (933,56) for_trim
  -> EXTERN: (933,61) for_adjustl
  -> EXTERN: (934,9) GETFLUNIT
  -> EXTERN: (935,3) for_open
  -> EXTERN: (935,22) for_trim
  -> EXTERN: (935,27) for_adjustl
  -> EXTERN: (937,13) for_stop_core
  -> EXTERN: (938,3) for_read_seq_lis
  -> EXTERN: (939,13) for_stop_core
  -> EXTERN: (940,9) for_close
  -> EXTERN: (941,3) for_write_seq_lis_xmit
  -> EXTERN: (941,3) for_write_seq_lis_xmit
  -> EXTERN: (941,3) for_write_seq_lis
  -> EXTERN: (942,3) for_write_seq_lis
  -> EXTERN: (944,10) buildwbmat_
  -> EXTERN: (944,10) __resetsp_inlined
  -> EXTERN: (944,10) __getsp_inlined
  -> EXTERN: (944,21) _alloca
  -> EXTERN: (949,5) for_write_seq_lis
  -> EXTERN: (950,14) GETFLUNIT
  -> EXTERN: (951,5) for_open
  -> EXTERN: (951,27) for_trim
  -> EXTERN: (951,32) for_adjustl
  -> EXTERN: (954,7) for_write_seq_lis_xmit
  -> EXTERN: (954,7) for_write_seq_lis
  -> EXTERN: (955,12) for_stop_core
  -> EXTERN: (957,5) for_check_mult_overflow64
  -> EXTERN: (957,5) for_alloc_allocatable
  -> EXTERN: (958,5) for_check_mult_overflow64
  -> EXTERN: (958,5) for_alloc_allocatable
  -> EXTERN: (959,5) for_write_int_fmt
  -> EXTERN: (961,7) __resetsp_inlined
  -> EXTERN: (961,7) for_read_seq_lis_xmit
  -> EXTERN: (961,7) for_read_seq_lis
  -> EXTERN: (961,7) _alloca
  -> EXTERN: (961,7) __getsp_inlined
  -> EXTERN: (963,9) for_read_seq_lis
  -> EXTERN: (963,9) for_read_seq_lis_xmit
  -> EXTERN: (963,9) __resetsp_inlined
  -> EXTERN: (963,9) _alloca
  -> EXTERN: (963,9) __getsp_inlined
  -> EXTERN: (966,11) for_close
  -> EXTERN: (968,1) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(943,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation: ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(945,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference igeom has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(945,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(960,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between 2718 line 961 and 2718 line 961
   remark #17106: parallel dependence: assumed ANTI dependence between 2718 line 961 and 2718 line 961
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(961,7)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 2718 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.600 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(961,7)
   <Remainder>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(961,22)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 2718 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15462: unmasked indexed (or gather) loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(961,22)
   <Remainder>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(962,7)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between 2732 line 963 and 2732 line 963
      remark #17106: parallel dependence: assumed ANTI dependence between 2732 line 963 and 2732 line 963
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(963,9)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference 2732 has aligned access
         remark #15300: LOOP WAS VECTORIZED
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15460: masked strided loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 1.600 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(963,9)
      <Remainder>
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(963,24)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference 2732 has aligned access
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 1.590 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(963,24)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: READGINPUT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (READGINPUT) [8/27=29.6%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(837,12)
  -> EXTERN: (867,3) for_cpystr
  -> EXTERN: (868,3) for_cpystr
  -> EXTERN: (873,3) for_write_seq_lis
  -> EXTERN: (875,3) for_open
  -> EXTERN: (878,5) for_write_seq_lis
  -> EXTERN: (878,5) for_write_seq_lis_xmit
  -> EXTERN: (881,3) for_read_seq_nml
  -> EXTERN: (882,17) for_write_seq_lis
  -> EXTERN: (886,8) GENATOMLIST
  -> EXTERN: (888,8) readirreps_
  -> EXTERN: (889,24) for_dealloc_allocatable
  -> EXTERN: (890,25) for_dealloc_allocatable
  -> EXTERN: (891,3) for_alloc_allocatable
  -> EXTERN: (891,3) for_check_mult_overflow64
  -> EXTERN: (892,3) for_alloc_allocatable
  -> EXTERN: (892,3) for_check_mult_overflow64
  -> EXTERN: (895,8) __resetsp_inlined
  -> EXTERN: (895,8) INITGRPS
  -> EXTERN: (895,8) _alloca
  -> EXTERN: (895,8) _alloca
  -> EXTERN: (895,8) __getsp_inlined
  -> EXTERN: (897,19) for_write_seq_lis
  -> EXTERN: (898,3) for_write_seq_lis
  -> EXTERN: (905,3) for_cpystr
  -> EXTERN: (906,3) for_cpystr
  -> EXTERN: (913,3) for_read_seq_nml
  -> EXTERN: (914,3) for_write_seq_fmt_xmit
  -> EXTERN: (914,3) for_write_seq_fmt
  -> EXTERN: (915,9) for_close
  -> EXTERN: (916,17) for_write_seq_lis


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(855,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between potdata_mp_atomlabels_ line 855 and potdata_mp_atomlabels_ line 855
   remark #17106: parallel dependence: assumed OUTPUT dependence between potdata_mp_atomlabels_ line 855 and potdata_mp_atomlabels_ line 855
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed OUTPUT dependence between potdata_mp_atomlabels_ line 855 and potdata_mp_atomlabels_ line 855
   remark #15346: vector dependence: assumed OUTPUT dependence between potdata_mp_atomlabels_ line 855 and potdata_mp_atomlabels_ line 855
   remark #25436: completely unrolled by 20  
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(857,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference dcoordls has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(858,5) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 6.000 
   remark #15478: estimated potential speedup: 1.320 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=25
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between cnpi_mp_grpsym_ line 893 and cnpi_mp_grpsym_ line 893
   remark #17106: parallel dependence: assumed FLOW dependence between cnpi_mp_grpsym_ line 893 and cnpi_mp_grpsym_ line 893
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=10

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between cnpi_mp_grpsym_ line 893 and cnpi_mp_grpsym_ line 893
      remark #17106: parallel dependence: assumed FLOW dependence between cnpi_mp_grpsym_ line 893 and cnpi_mp_grpsym_ line 893
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=20

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference cnpi_mp_grpsym_ has unaligned access
         remark #15388: vectorization support: reference groupsym has aligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 3.000 
         remark #15478: estimated potential speedup: 1.260 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
         remark #25015: Estimate of max trip count of loop=10
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3)
      <Remainder, Multiversioned v2>
         remark #25015: Estimate of max trip count of loop=20
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between cnpi_mp_grpprty_ line 894 and cnpi_mp_grpprty_ line 894
   remark #17106: parallel dependence: assumed FLOW dependence between cnpi_mp_grpprty_ line 894 and cnpi_mp_grpprty_ line 894
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=10

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between cnpi_mp_grpprty_ line 894 and cnpi_mp_grpprty_ line 894
      remark #17106: parallel dependence: assumed FLOW dependence between cnpi_mp_grpprty_ line 894 and cnpi_mp_grpprty_ line 894
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=20

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15389: vectorization support: reference cnpi_mp_grpprty_ has unaligned access
         remark #15388: vectorization support: reference groupprty has aligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15451: unmasked unaligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 3.000 
         remark #15478: estimated potential speedup: 1.260 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
         remark #25015: Estimate of max trip count of loop=10
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3)
      <Remainder, Multiversioned v2>
         remark #25015: Estimate of max trip count of loop=20
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between 2336 line 895 and 2336 line 895
   remark #17106: parallel dependence: assumed FLOW dependence between 2336 line 895 and 2336 line 895
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 2336 has aligned access
      remark #15389: vectorization support: reference cnpi_mp_grpsym_ has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.590 
      remark #15479: lightweight vector operations: 1 
      remark #15480: medium-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference 2338 has aligned access
   remark #15388: vectorization support: reference 2336 has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 4
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 30.000 
   remark #15478: estimated potential speedup: 0.660 
   remark #15479: lightweight vector operations: 8 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(911,3)
   remark #25408: memset generated
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15398: loop was not vectorized: loop was transformed to memset or memcpy
   remark #25015: Estimate of max trip count of loop=1
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(912,3)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference potdata_mp_forig_ has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 5.330 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=25
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(893,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(894,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(895,8):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(911,3):remark #34000: call to memset implemented inline with stores with proven (alignment, offset): (32, 0)
===========================================================================

Begin optimization report for: PREPOT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PREPOT) [9/27=33.3%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(347,12)
  -> EXTERN: (355,6) for_write_seq_lis
  -> EXTERN: (357,11) getver_
  -> EXTERN: (359,6) for_write_seq_fmt_xmit
  -> EXTERN: (359,6) for_write_seq_fmt
  -> EXTERN: (359,39) for_trim
  -> (360,11) READGINPUT (isz = 981) (sz = 986)
     [[ Inlining would exceed -inline-max-size value (986>230) <1>]]
  -> EXTERN: (361,11) initialize_
  -> (363,18) LOADREFGEOMS (isz = 1028) (sz = 1031)
     [[ Inlining would exceed -inline-max-size value (1031>230) <1>]]
  -> EXTERN: (364,30) for_dealloc_allocatable
  -> EXTERN: (365,6) for_alloc_allocatable
  -> EXTERN: (365,6) for_check_mult_overflow64
  -> (368,17) OPENTRAJFILE (isz = 503) (sz = 508)
     [[ Inlining would exceed -inline-max-size value (508>230) <1>]]
  -> EXTERN: (371,15) GETFLUNIT
  -> EXTERN: (372,9) for_open
  -> EXTERN: (373,9) for_write_seq_fmt
  -> EXTERN: (374,9) for_write_seq_fmt
  -> EXTERN: (378,6) for_write_seq_lis
  -> (382,11) INIT (isz = 324) (sz = 329)
     [[ Inlining would exceed -inline-max-size value (329>230) <1>]]
  -> EXTERN: (383,6) for_write_seq_lis
  -> INLINE: (385,11) RESETEVALCOUNT (isz = 2) (sz = 5)

===========================================================================

Begin optimization report for: INITPOTENTIAL

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (INITPOTENTIAL) [10/27=37.0%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(390,12)
  -> INLINE: (391,8) PREPOT (isz = 288) (sz = 291)
    -> EXTERN: (355,6) for_write_seq_lis
    -> EXTERN: (357,11) getver_
    -> EXTERN: (359,6) for_write_seq_fmt
    -> EXTERN: (359,6) for_write_seq_fmt_xmit
    -> EXTERN: (359,39) for_trim
    -> (360,11) READGINPUT (isz = 981) (sz = 986)
       [[ Inlining would exceed -inline-max-size value (986>253) <1>]]
    -> EXTERN: (361,11) initialize_
    -> (363,18) LOADREFGEOMS (isz = 1028) (sz = 1031)
       [[ Inlining would exceed -inline-max-size value (1031>253) <1>]]
    -> EXTERN: (364,30) for_dealloc_allocatable
    -> EXTERN: (365,6) for_check_mult_overflow64
    -> EXTERN: (365,6) for_alloc_allocatable
    -> (368,17) OPENTRAJFILE (isz = 503) (sz = 508)
       [[ Inlining would exceed -inline-max-size value (508>230) <1>]]
    -> EXTERN: (371,15) GETFLUNIT
    -> EXTERN: (372,9) for_open
    -> EXTERN: (373,9) for_write_seq_fmt
    -> EXTERN: (374,9) for_write_seq_fmt
    -> EXTERN: (378,6) for_write_seq_lis
    -> (382,11) INIT (isz = 324) (sz = 329)
       [[ Inlining would exceed -inline-max-size value (329>253) <1>]]
    -> EXTERN: (383,6) for_write_seq_lis
    -> INLINE: (385,11) RESETEVALCOUNT (isz = 2) (sz = 5)

===========================================================================

Begin optimization report for: POTDATA::GETDIST

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POTDATA::GETDIST) [11/27=40.7%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(142,14)
  -> EXTERN: (142,14) _alloca
  -> EXTERN: (142,14) _alloca
  -> EXTERN: (142,14) _alloca
  -> EXTERN: (142,14) __getsp_inlined
  -> EXTERN: (179,3) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(156,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference rgeomtmp has aligned access
   remark #15388: vectorization support: reference dcoordls has aligned access
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15399: vectorization support: unroll factor set to 4
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15458: masked indexed (or gather) loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 48.000 
   remark #15478: estimated potential speedup: 0.490 
   remark #15479: lightweight vector operations: 10 
   remark #15480: medium-overhead vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
   remark #25439: unrolled with remainder by 2  
   remark #25015: Estimate of max trip count of loop=200
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(156,5)
<Remainder>
   remark #25015: Estimate of max trip count of loop=200
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(157,5)
<Distributed chunk1>
   remark #25045: Fused Loops: ( 157 158 )

   remark #17108: loop was not parallelized: insufficient computational work
   remark #25426: Loop Distributed (2 way) 
   remark #15388: vectorization support: reference rgeomp has aligned access
   remark #15388: vectorization support: reference dcoordls has aligned access
   remark #15388: vectorization support: reference dcoordls has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 2 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15458: masked indexed (or gather) loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 6.750 
   remark #15478: estimated potential speedup: 1.330 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=50
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(158,12)
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(157,5)
<Remainder, Distributed chunk1>
   remark #25015: Estimate of max trip count of loop=200
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(157,5)
<Distributed chunk2>
   remark #15388: vectorization support: reference rgeomp has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(158,12) ]
   remark #15399: vectorization support: unroll factor set to 8
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 20.000 
   remark #15478: estimated potential speedup: 3.660 
   remark #15479: lightweight vector operations: 10 
   remark #15488: --- end vector loop cost summary ---
   remark #25015: Estimate of max trip count of loop=6
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(157,5)
<Remainder, Distributed chunk2>
   remark #15388: vectorization support: reference rgeomp has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(158,12) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
   remark #25015: Estimate of max trip count of loop=50
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(157,5)
<Remainder, Distributed chunk2>
   remark #25015: Estimate of max trip count of loop=200
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(159,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between minrgeomp line 165 and minrgeomp line 165
   remark #17106: parallel dependence: assumed FLOW dependence between minrgeomp line 165 and minrgeomp line 165
   remark #17106: parallel dependence: assumed OUTPUT dependence between min_d2 line 164 and min_d2 line 164
   remark #17106: parallel dependence: assumed OUTPUT dependence between min_d2 line 164 and min_d2 line 164
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(160,7)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference rgeomtmp has aligned access
      remark #15388: vectorization support: reference dcoordls has aligned access
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15399: vectorization support: unroll factor set to 4
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15458: masked indexed (or gather) loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 6 
      remark #15477: vector loop cost: 48.000 
      remark #15478: estimated potential speedup: 0.490 
      remark #15479: lightweight vector operations: 10 
      remark #15480: medium-overhead vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25439: unrolled with remainder by 2  
      remark #25015: Estimate of max trip count of loop=200
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(160,7)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=200
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(161,7)
      remark #25045: Fused Loops: ( 161 162 )

      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference rgeomp has aligned access
      remark #15388: vectorization support: reference dcoordls has aligned access
      remark #15388: vectorization support: reference dcoordls has aligned access
      remark #15388: vectorization support: reference rgeomp has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(162,10) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15301: FUSED LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 3 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15458: masked indexed (or gather) loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 20 
      remark #15477: vector loop cost: 37.000 
      remark #15478: estimated potential speedup: 2.030 
      remark #15479: lightweight vector operations: 15 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(162,10)
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(161,7)
   <Remainder>
      remark #15388: vectorization support: reference rgeomp has aligned access
      remark #15388: vectorization support: reference dcoordls has aligned access
      remark #15388: vectorization support: reference dcoordls has aligned access
      remark #15388: vectorization support: reference rgeomp has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(162,10) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
      remark #25015: Estimate of max trip count of loop=50
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(161,7)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=200
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between minrgeomp line 165 and minrgeomp line 165
      remark #17106: parallel dependence: assumed FLOW dependence between minrgeomp line 165 and minrgeomp line 165
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference minrgeomp has aligned access
         remark #15388: vectorization support: reference rgeomp has aligned access
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 0.750 
         remark #15478: estimated potential speedup: 5.330 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
<Distributed chunk1>
   remark #25087: Preprocess Loopnests: Sinking 1 Stmts Into Inner LOOP to Create Perfect Nest 
   remark #25426: Loop Distributed (3 way) 
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 173 and esterr line 173
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 173 and esterr line 173
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Peeled, Distributed chunk1>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Distributed chunk1>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Remainder, Distributed chunk1>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14)
<Distributed chunk2>
   remark #25444: Loopnest Interchanged: ( 1 2 ) --> ( 2 1 )
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 173 and esterr line 173
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 173 and esterr line 173
   remark #25440: unrolled and jammed by 2   (pre-vector) 
   remark #15542: loop was not vectorized: inner loop was already vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Peeled>
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 2
      remark #25015: Estimate of max trip count of loop=200
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 2 
      remark #15460: masked strided loads: 2 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 18 
      remark #15477: vector loop cost: 28.000 
      remark #15478: estimated potential speedup: 2.390 
      remark #15479: lightweight vector operations: 13 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Remainder>
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #25015: Estimate of max trip count of loop=50
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=200
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14)
<Remainder, Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=200
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15399: vectorization support: unroll factor set to 4
      remark #15301: PERMUTED LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 9 
      remark #15477: vector loop cost: 14.000 
      remark #15478: estimated potential speedup: 2.370 
      remark #15479: lightweight vector operations: 6 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Remainder>
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14) ]
      remark #15301: REMAINDER LOOP WAS VECTORIZED
      remark #25015: Estimate of max trip count of loop=50
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=200
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
<Peeled, Distributed chunk3>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
<Distributed chunk3>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(172,11) ]
   remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(172,11) ]
   remark #15399: vectorization support: unroll factor set to 4
   remark #15301: PARTIAL LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 12.000 
   remark #15478: estimated potential speedup: 1.900 
   remark #15479: lightweight vector operations: 4 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
<Remainder, Distributed chunk3>
   remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(172,11) ]
   remark #15388: vectorization support: reference esterr has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(172,11) ]
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(171,9)
<Remainder, Distributed chunk3>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 176 and esterr line 176
   remark #17106: parallel dependence: assumed OUTPUT dependence between esterr line 176 and esterr line 176
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference esterr has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(165,9):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(173,14):remark #34026: call to memset implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(176,9):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: GETMIND

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETMIND) [12/27=44.4%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(208,14)
  -> EXTERN: (208,14) _alloca
  -> EXTERN: (208,14) __getsp_inlined
  -> EXTERN: (227,14) __getsp_inlined
  -> EXTERN: (227,14) _alloca
  -> (227,14) POTDATA::GETDIST (isz = 358) (sz = 371)
     [[ Inlining would exceed -inline-max-size value (371>230) <1>]]
  -> EXTERN: (227,14) __resetsp_inlined
  -> (240,10) POTDATA::GETDIST (isz = 358) (sz = 371)
     [[ Inlining would exceed -inline-max-size value (371>230) <1>]]
  -> EXTERN: (267,12) _alloca
  -> (267,12) POTDATA::GETDIST (isz = 358) (sz = 371)
     [[ Inlining would exceed -inline-max-size value (371>230) <1>]]
  -> EXTERN: (267,12) __resetsp_inlined
  -> EXTERN: (267,12) __getsp_inlined
  -> EXTERN: (275,10) __resetsp_inlined
  -> (275,10) POTDATA::GETDIST (isz = 358) (sz = 371)
     [[ Inlining would exceed -inline-max-size value (371>230) <1>]]
  -> EXTERN: (275,10) _alloca
  -> EXTERN: (275,10) __getsp_inlined
  -> EXTERN: (277,3) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(226,7)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation: ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between 252 line 227 and 252 line 227
   remark #17106: parallel dependence: assumed OUTPUT dependence between 252 line 227 and 252 line 227
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(227,14)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 252 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.600 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(227,14)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between potdata_mp_lastrgeom_ line 235 and potdata_mp_lastrgeom_ line 235
   remark #17106: parallel dependence: assumed FLOW dependence between potdata_mp_lastrgeom_ line 235 and potdata_mp_lastrgeom_ line 235
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference potdata_mp_lastrgeom_ has aligned access
      remark #15389: vectorization support: reference currgeom has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.720 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between potdata_mp_lastrgeom_ line 242 and potdata_mp_lastrgeom_ line 242
   remark #17106: parallel dependence: assumed FLOW dependence between potdata_mp_lastrgeom_ line 242 and potdata_mp_lastrgeom_ line 242
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference potdata_mp_lastrgeom_ has aligned access
      remark #15389: vectorization support: reference currgeom has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.720 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(243,5)
<Peeled>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(243,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(245,9) ]
   remark #15389: vectorization support: reference potdata_mp_udbounds_ has unaligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(245,9) ]
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(247,9) ]
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(247,9) ]
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(249,9) ]
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(245,9) ]
   remark #15388: vectorization support: reference potdata_mp_ldbounds_ has aligned access   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(249,9) ]
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 3 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 30 
   remark #15477: vector loop cost: 10.750 
   remark #15478: estimated potential speedup: 2.700 
   remark #15479: lightweight vector operations: 28 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 5
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(243,5)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Multiversioned v1>
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 4.040 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Remainder, Multiversioned v1>
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Multiversioned v1>
   remark #25230: Loop multiversioned for Same base arrays
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15389: vectorization support: reference potdata_mp_udbounds_ has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 11.000 
   remark #15478: estimated potential speedup: 2.040 
   remark #15479: lightweight vector operations: 4 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Remainder, Multiversioned v1>
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15389: vectorization support: reference potdata_mp_udbounds_ has unaligned access
   remark #15381: vectorization support: unaligned access used inside loop body
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Multiversioned v3>
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between potdata_mp_udbounds_ line 252 and potdata_mp_udbounds_ line 252
   remark #17106: parallel dependence: assumed ANTI dependence between potdata_mp_udbounds_ line 252 and potdata_mp_udbounds_ line 252
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(252,5)
<Remainder, Multiversioned v3>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(254,11)
<Peeled>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(254,11)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(254,11) ]
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 5.300 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(254,11)
<Remainder>
   remark #15388: vectorization support: reference potdata_mp_udbounds_ has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(254,11)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(256,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between nwl line 258 and nwl line 258
   remark #17106: parallel dependence: assumed FLOW dependence between nwl line 258 and nwl line 258
   remark #17106: parallel dependence: assumed FLOW dependence between nwl line 258 and nwl line 258
   remark #17106: parallel dependence: assumed ANTI dependence between nwl line 258 and nwl line 258
   remark #17106: parallel dependence: assumed OUTPUT dependence between wl line 259 and wl line 259
   remark #17106: parallel dependence: assumed OUTPUT dependence between wl line 259 and wl line 259
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between nwl line 258 and nwl line 258
   remark #15346: vector dependence: assumed FLOW dependence between nwl line 258 and nwl line 258
   remark #15346: vector dependence: assumed FLOW dependence between nwl line 258 and nwl line 258
   remark #15346: vector dependence: assumed ANTI dependence between nwl line 258 and nwl line 258
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(256,5)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(265,5)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between 289 line 267 and 289 line 267
   remark #17106: parallel dependence: assumed OUTPUT dependence between 289 line 267 and 289 line 267
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(267,12)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference 289 has aligned access
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.600 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(267,12)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(275,10)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference 295 has aligned access
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15460: masked strided loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.600 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(275,10)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(276,5)
<Peeled>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(276,5)
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15388: vectorization support: reference eerr has aligned access
   remark #15388: vectorization support: reference eerr has aligned access
   remark #15399: vectorization support: unroll factor set to 4
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 6 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 4.070 
   remark #15479: lightweight vector operations: 5 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(276,5)
<Remainder>
   remark #15388: vectorization support: reference eerr has aligned access
   remark #15388: vectorization support: reference eerr has aligned access
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(276,5)
<Remainder>
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(235,7):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(242,5):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: EVALUATESURFGEN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EVALUATESURFGEN) [13/27=48.1%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(564,12)
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) _alloca
  -> EXTERN: (564,12) __getsp_inlined
  -> EXTERN: (600,5) for_write_seq_lis
  -> EXTERN: (601,5) for_write_seq_lis
  -> EXTERN: (602,10) for_stop_core
  -> EXTERN: (604,7) omp_get_max_threads_
  -> EXTERN: (606,16) for_system_clock_rate
  -> EXTERN: (606,16) for_system_clock_count
  -> EXTERN: (607,8) buildwbmat_
  -> EXTERN: (609,10) for_system_clock_count
  -> EXTERN: (614,8) EVALRAWTERMSL
  -> EXTERN: (616,10) for_system_clock_count
  -> EXTERN: (621,8) EVALHDDIRECT
  -> EXTERN: (623,10) for_system_clock_count
  -> EXTERN: (633,12) daxpy_
  -> EXTERN: (639,10) for_system_clock_count
  -> EXTERN: (656,10) for_system_clock_count
  -> EXTERN: (660,8) omp_set_num_threads_
  -> EXTERN: (663,8) dsyevr_
  -> EXTERN: (666,8) omp_set_num_threads_
  -> EXTERN: (669,5) __resetsp_inlined
  -> EXTERN: (669,5) __getsp_inlined
  -> EXTERN: (669,19) _alloca
  -> EXTERN: (669,42) _alloca
  -> EXTERN: (681,14) dscal_
  -> EXTERN: (683,12) dcopy_
  -> EXTERN: (688,10) for_system_clock_count
  -> EXTERN: (693,5) for_write_int_fmt
  -> EXTERN: (694,5) for_write_int_fmt
  -> (695,16) OPENTRAJFILE (isz = 503) (sz = 508)
     [[ Inlining would exceed -inline-max-size value (508>230) <1>]]
  -> EXTERN: (703,16) dnrm2_
  -> (707,13) GETMIND (isz = 531) (sz = 542)
     [[ Inlining would exceed -inline-max-size value (542>253) <1>]]
  -> EXTERN: (715,23) dnrm2_
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt_xmit
  -> EXTERN: (719,10) for_write_seq_fmt
  -> EXTERN: (719,10) __getsp_inlined
  -> EXTERN: (719,10) __resetsp_inlined
  -> EXTERN: (720,34) for_trim
  -> EXTERN: (720,61) for_trim
  -> EXTERN: (721,57) for_trim
  -> EXTERN: (721,92) for_trim
  -> EXTERN: (721,102) for_concat
  -> EXTERN: (721,102) _alloca
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt_xmit
  -> EXTERN: (725,10) for_write_seq_fmt
  -> EXTERN: (725,10) __getsp_inlined
  -> EXTERN: (725,10) __resetsp_inlined
  -> EXTERN: (726,34) for_trim
  -> EXTERN: (726,61) for_trim
  -> EXTERN: (727,20) for_trim
  -> EXTERN: (727,30) for_concat
  -> EXTERN: (727,30) _alloca
  -> EXTERN: (731,8) __getsp_inlined
  -> EXTERN: (731,8) for_write_seq_fmt
  -> EXTERN: (731,8) for_write_seq_fmt_xmit
  -> EXTERN: (731,8) for_write_seq_fmt_xmit
  -> EXTERN: (731,8) for_write_seq_fmt_xmit
  -> EXTERN: (731,8) for_write_seq_fmt_xmit
  -> EXTERN: (731,8) for_write_seq_fmt_xmit
  -> EXTERN: (731,8) __resetsp_inlined
  -> EXTERN: (731,38) for_trim
  -> EXTERN: (731,65) for_trim
  -> EXTERN: (731,100) for_trim
  -> EXTERN: (731,110) _alloca
  -> EXTERN: (731,110) for_concat
  -> EXTERN: (737,7) for_write_seq_fmt_xmit
  -> EXTERN: (737,7) for_write_seq_fmt
  -> EXTERN: (738,7) for_write_seq_fmt_xmit
  -> EXTERN: (738,7) for_write_seq_fmt
  -> EXTERN: (740,9) for_write_seq_fmt
  -> EXTERN: (740,9) __resetsp_inlined
  -> EXTERN: (740,9) _alloca
  -> EXTERN: (740,9) __getsp_inlined
  -> EXTERN: (740,28) for_trim
  -> EXTERN: (740,33) for_adjustl
  -> EXTERN: (740,63) _alloca
  -> EXTERN: (740,63) for_concat
  -> EXTERN: (745,10) for_system_clock_count
  -> EXTERN: (747,5) for_write_seq_lis
  -> EXTERN: (748,5) for_write_seq_lis
  -> EXTERN: (749,5) for_write_seq_fmt
  -> EXTERN: (753,1) __resetsp_inlined


    Report from: OpenMP optimizations [openmp]

OpenMP Construct at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(630,7)
   remark #16200: OpenMP DEFINED LOOP WAS PARALLELIZED

    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #25420: Collapsed with loop at line 628 
   remark #17108: loop was not parallelized: insufficient computational work
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
      remark #25408: memset generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between dcgrads line 628 and dcgrads line 628
      remark #17106: parallel dependence: assumed OUTPUT dependence between dcgrads line 628 and dcgrads line 628
      remark #15542: loop was not vectorized: inner loop was already vectorized
      remark #25015: Estimate of max trip count of loop=1

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
      <Peeled>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference dcgrads has aligned access
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.500 
         remark #15478: estimated potential speedup: 1.500 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
         remark #25015: Estimate of max trip count of loop=1
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
      <Remainder>
         remark #25015: Estimate of max trip count of loop=12
      LOOP END
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3)
      remark #25421: Loop eliminated in Collapsing 

   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between df line 645 and df line 645
   remark #17106: parallel dependence: assumed OUTPUT dependence between df line 645 and df line 645
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference df has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(646,2)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation: ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between df line 648 and df line 648
   remark #17106: parallel dependence: assumed OUTPUT dependence between df line 648 and df line 648
   remark #15542: loop was not vectorized: inner loop was already vectorized
   remark #25015: Estimate of max trip count of loop=100

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(648,3)
   <Peeled>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(648,3)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference df has aligned access
      remark #15388: vectorization support: reference df has aligned access
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15460: masked strided loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 74 
      remark #15477: vector loop cost: 18.000 
      remark #15478: estimated potential speedup: 13.530 
      remark #15479: lightweight vector operations: 6 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(648,3)
   <Remainder>
      remark #15388: vectorization support: reference df has aligned access
      remark #15388: vectorization support: reference df has aligned access
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(648,3)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(651,2)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between hmat line 652 and df line 653
   remark #17106: parallel dependence: assumed ANTI dependence between df line 653 and hmat line 652
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(653,4)
   <Peeled>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(653,4)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15389: vectorization support: reference df has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15399: vectorization support: unroll factor set to 4
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 6 
      remark #15477: vector loop cost: 11.000 
      remark #15478: estimated potential speedup: 2.050 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(653,4)
   <Remainder>
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15389: vectorization support: reference df has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15301: REMAINDER LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(653,4)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between hmat line 662 and hmat2 line 662
   remark #17106: parallel dependence: assumed FLOW dependence between hmat2 line 662 and hmat line 662
   remark #15382: vectorization support: call to function ?1memcpy cannot be vectorized
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between hmat line 662 and hmat2 line 662
   remark #15346: vector dependence: assumed FLOW dependence between hmat2 line 662 and hmat line 662

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between hmat line 662 and hmat2 line 662
      remark #17106: parallel dependence: assumed FLOW dependence between hmat2 line 662 and hmat line 662
      remark #15398: loop was not vectorized: loop was transformed to memset or memcpy

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3)
      <Multiversioned v2>
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed FLOW dependence between hmat2 line 662 and hmat line 662
         remark #17106: parallel dependence: assumed ANTI dependence between hmat line 662 and hmat2 line 662
         remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
         remark #25439: unrolled with remainder by 2  
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between potdata_mp_evecstore_ line 665 and potdata_mp_evecstore_ line 665
   remark #17106: parallel dependence: assumed FLOW dependence between potdata_mp_evecstore_ line 665 and potdata_mp_evecstore_ line 665
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between potdata_mp_evecstore_ line 665 and potdata_mp_evecstore_ line 665
      remark #17106: parallel dependence: assumed FLOW dependence between potdata_mp_evecstore_ line 665 and potdata_mp_evecstore_ line 665
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference potdata_mp_evecstore_ has aligned access
         remark #15389: vectorization support: reference evec has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.250 
         remark #15478: estimated potential speedup: 1.720 
         remark #15479: lightweight vector operations: 2 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(668,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between evec line 669 and cgrads line 669
   remark #17106: parallel dependence: assumed FLOW dependence between cgrads line 669 and evec line 669
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         remark #25408: memset generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
         remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Peeled>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference 1697 has aligned access
            remark #15399: vectorization support: unroll factor set to 2
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 1.500 
            remark #15479: lightweight vector operations: 3 
            remark #15488: --- end vector loop cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Remainder>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
      remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 2 1 3 )
      remark #17100: PERMUTED LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2.89_2upper_.65 } private={ } firstprivate={ i 1247 1264 dcgrads 1604_dv_template.addr_a0 1697 1695 } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Peeled>
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
            remark #15388: vectorization support: reference 1697 has aligned access
            remark #15388: vectorization support: reference 1697 has aligned access
            remark #15399: vectorization support: unroll factor set to 4
            remark #15300: LOOP WAS VECTORIZED
            remark #15448: unmasked aligned unit stride loads: 1 
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15460: masked strided loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 9 
            remark #15477: vector loop cost: 14.000 
            remark #15478: estimated potential speedup: 2.390 
            remark #15479: lightweight vector operations: 6 
            remark #15480: medium-overhead vector operations: 1 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Remainder>
            remark #15388: vectorization support: reference 1697 has aligned access
            remark #15388: vectorization support: reference 1697 has aligned access
            remark #15301: REMAINDER LOOP WAS VECTORIZED
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Remainder>
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1699 line 669 and 1699 line 669
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1699 line 669 and 1699 line 669
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         remark #25408: memset generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed OUTPUT dependence between 1699 line 669 and 1699 line 669
         remark #17106: parallel dependence: assumed OUTPUT dependence between 1699 line 669 and 1699 line 669
         remark #15542: loop was not vectorized: inner loop was already vectorized
         remark #25015: Estimate of max trip count of loop=1

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         <Peeled>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference 1699 has aligned access
            remark #15399: vectorization support: unroll factor set to 2
            remark #15300: LOOP WAS VECTORIZED
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.500 
            remark #15478: estimated potential speedup: 1.500 
            remark #15479: lightweight vector operations: 3 
            remark #15488: --- end vector loop cost summary ---
            remark #25015: Estimate of max trip count of loop=1
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         <Remainder>
            remark #25015: Estimate of max trip count of loop=12
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
      remark #25444: Loopnest Interchanged: ( 1 2 3 ) --> ( 2 3 1 )
      remark #17100: PERMUTED LOOP WAS AUTO-PARALLELIZED
      remark #17101: parallel loop shared={ .2.89_2upper_.69 } private={ } firstprivate={ 1264 1604_dv_template.addr_a0 1697 1699 1689 i } lastprivate={ } firstlastprivate={ } reduction={ }
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
            remark #15542: loop was not vectorized: inner loop was already vectorized

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               remark #25442: blocked by 250   (pre-vector) 
               remark #25440: unrolled and jammed by 4   (pre-vector) 
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=250

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  remark #25442: blocked by 250   (pre-vector) 
                  remark #25440: unrolled and jammed by 4   (pre-vector) 
                  remark #15542: loop was not vectorized: inner loop was already vectorized
                  remark #25015: Estimate of max trip count of loop=250

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                     remark #25442: blocked by 256   (pre-vector) 
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15389: vectorization support: reference evec has unaligned access
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15301: PERMUTED LOOP WAS VECTORIZED
                     remark #15450: unmasked unaligned unit stride loads: 8 
                     remark #15475: --- begin vector loop cost summary ---
                     remark #15476: scalar loop cost: 142 
                     remark #15477: vector loop cost: 40.000 
                     remark #15478: estimated potential speedup: 3.540 
                     remark #15479: lightweight vector operations: 112 
                     remark #15488: --- end vector loop cost summary ---
                     remark #25015: Estimate of max trip count of loop=64
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Remainder>
                     remark #25015: Estimate of max trip count of loop=256
                  LOOP END
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Remainder>
                  remark #15542: loop was not vectorized: inner loop was already vectorized
                  remark #25015: Estimate of max trip count of loop=250

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Peeled>
                     remark #25015: Estimate of max trip count of loop=256
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15301: PERMUTED LOOP WAS VECTORIZED
                     remark #15442: entire loop may be executed in remainder
                     remark #15448: unmasked aligned unit stride loads: 1 
                     remark #15450: unmasked unaligned unit stride loads: 4 
                     remark #15475: --- begin vector loop cost summary ---
                     remark #15476: scalar loop cost: 36 
                     remark #15477: vector loop cost: 9.000 
                     remark #15478: estimated potential speedup: 3.780 
                     remark #15479: lightweight vector operations: 28 
                     remark #15488: --- end vector loop cost summary ---
                     remark #25015: Estimate of max trip count of loop=64
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Remainder>
                     remark #25015: Estimate of max trip count of loop=256
                  LOOP END
               LOOP END
            LOOP END

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
            <Remainder>
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=250

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  remark #15542: loop was not vectorized: inner loop was already vectorized
                  remark #25015: Estimate of max trip count of loop=250

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Peeled>
                     remark #25015: Estimate of max trip count of loop=256
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                     remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19) ]
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15399: vectorization support: unroll factor set to 4
                     remark #15301: PERMUTED LOOP WAS VECTORIZED
                     remark #15442: entire loop may be executed in remainder
                     remark #15448: unmasked aligned unit stride loads: 1 
                     remark #15450: unmasked unaligned unit stride loads: 1 
                     remark #15475: --- begin vector loop cost summary ---
                     remark #15476: scalar loop cost: 8 
                     remark #15477: vector loop cost: 9.000 
                     remark #15478: estimated potential speedup: 2.870 
                     remark #15479: lightweight vector operations: 7 
                     remark #15488: --- end vector loop cost summary ---
                     remark #25015: Estimate of max trip count of loop=16
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Remainder>
                     remark #15389: vectorization support: reference 1697 has unaligned access
                     remark #15388: vectorization support: reference evec has aligned access
                     remark #15381: vectorization support: unaligned access used inside loop body
                     remark #15301: REMAINDER LOOP WAS VECTORIZED
                     remark #25015: Estimate of max trip count of loop=64
                  LOOP END

                  LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  <Remainder>
                     remark #25015: Estimate of max trip count of loop=256
                  LOOP END
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,5)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,5)
      <Peeled>
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,5)
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference 1699 has aligned access
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15462: unmasked indexed (or gather) loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.500 
         remark #15478: estimated potential speedup: 1.560 
         remark #15479: lightweight vector operations: 2 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,5)
      <Remainder>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(671,3)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25451: Advice: Loop Interchange, if possible, might help loopnest. Suggested Permutation: ( 1 2 ) --> ( 2 1 ) 
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between cgrads line 674 and energy line 679
   remark #17106: parallel dependence: assumed ANTI dependence between energy line 679 and cgrads line 674
   remark #15382: vectorization support: call to function dscal_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(681,14) ]
   remark #15382: vectorization support: call to function dcopy_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(683,12) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between cgrads line 674 and energy line 679
   remark #15346: vector dependence: assumed ANTI dependence between energy line 679 and cgrads line 674

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(672,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between cgrads line 674 and energy line 679
      remark #17106: parallel dependence: assumed ANTI dependence between energy line 679 and cgrads line 674
      remark #15382: vectorization support: call to function dscal_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(681,14) ]
      remark #15382: vectorization support: call to function dcopy_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(683,12) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between cgrads line 674 and energy line 679
      remark #15346: vector dependence: assumed ANTI dependence between energy line 679 and cgrads line 674
      remark #25439: unrolled with remainder by 2  
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(672,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(702,11)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between 1725 line 703 and 1725 line 703
   remark #17106: parallel dependence: assumed ANTI dependence between 1725 line 703 and 1725 line 703
   remark #15382: vectorization support: call to function dnrm2_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(703,16) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 1725 line 703 and 1725 line 703
   remark #15346: vector dependence: assumed ANTI dependence between 1725 line 703 and 1725 line 703
   remark #25015: Estimate of max trip count of loop=200
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8)
   remark #25408: memset generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed OUTPUT dependence between fnorm line 711 and fnorm line 711
   remark #17106: parallel dependence: assumed OUTPUT dependence between fnorm line 711 and fnorm line 711
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8)
   <Peeled>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8)
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference fnorm has aligned access
      remark #15399: vectorization support: unroll factor set to 2
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.500 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
      remark #25015: Estimate of max trip count of loop=1
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8)
   <Remainder>
      remark #25015: Estimate of max trip count of loop=12
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(713,10)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed FLOW dependence between 1731 line 715 and 1731 line 715
   remark #17106: parallel dependence: assumed ANTI dependence between 1731 line 715 and 1731 line 715
   remark #15382: vectorization support: call to function dnrm2_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(715,23) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed FLOW dependence between 1731 line 715 and 1731 line 715
   remark #15346: vector dependence: assumed ANTI dependence between 1731 line 715 and 1731 line 715
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(713,10)
<Remainder>
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(739,7)
   remark #25096: Loop Interchange not done due to: Imperfect Loop Nest (Either at Source or due to other Compiler Transformations)
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between cgeom line 740 and ARGBLOCK_REC_66 line 740
   remark #17106: parallel dependence: assumed FLOW dependence between ARGBLOCK_REC_66 line 740 and cgeom line 740
   remark #15382: vectorization support: call to function for_adjustl cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(740,33) ]
   remark #15382: vectorization support: call to function for_trim cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(740,28) ]
   remark #15382: vectorization support: call to function for_concat cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(740,63) ]
   remark #15382: vectorization support: call to function for_write_seq_fmt cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(740,9) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between cgeom line 740 and ARGBLOCK_REC_66 line 740
   remark #15346: vector dependence: assumed FLOW dependence between ARGBLOCK_REC_66 line 740 and cgeom line 740

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(740,9)
      remark #25436: completely unrolled by 3   (pre-vector) 
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(631,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between ncoord line 632 and ncoord line 633
   remark #17106: parallel dependence: assumed FLOW dependence between ncoord line 633 and ncoord line 632
   remark #15382: vectorization support: call to function daxpy_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(633,12) ]
   remark #15344: loop was not vectorized: vector dependence prevents vectorization
   remark #15346: vector dependence: assumed ANTI dependence between ncoord line 632 and ncoord line 633
   remark #15346: vector dependence: assumed FLOW dependence between ncoord line 633 and ncoord line 632

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(632,5)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed FLOW dependence between 1649 line 633 and 1649 line 633
      remark #17106: parallel dependence: assumed ANTI dependence between 1649 line 633 and 1649 line 633
      remark #15382: vectorization support: call to function daxpy_ cannot be vectorized   [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(633,12) ]
      remark #15344: loop was not vectorized: vector dependence prevents vectorization
      remark #15346: vector dependence: assumed FLOW dependence between 1649 line 633 and 1649 line 633
      remark #15346: vector dependence: assumed ANTI dependence between 1649 line 633 and 1649 line 633
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
      remark #17106: parallel dependence: assumed OUTPUT dependence between 1697 line 669 and 1697 line 669
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         remark #17107: loop was not parallelized: inner loop
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
            remark #25442: blocked by 125   (pre-vector) 
            remark #25440: unrolled and jammed by 4   (pre-vector) 
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               remark #25442: blocked by 125   (pre-vector) 
               remark #25440: unrolled and jammed by 4   (pre-vector) 
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Peeled>
                  remark #25456: Number of Array Refs Scalar Replaced In Loop: 24
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
                  remark #25442: blocked by 128   (pre-vector) 
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 4 
                  remark #15450: unmasked unaligned unit stride loads: 3 
                  remark #15451: unmasked unaligned unit stride stores: 12 
                  remark #15460: masked strided loads: 16 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 142 
                  remark #15477: vector loop cost: 69.500 
                  remark #15478: estimated potential speedup: 1.950 
                  remark #15479: lightweight vector operations: 110 
                  remark #15480: medium-overhead vector operations: 1 
                  remark #15481: heavy-overhead vector operations: 1 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=32
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
            <Remainder>
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Peeled>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15450: unmasked unaligned unit stride loads: 3 
                  remark #15451: unmasked unaligned unit stride stores: 3 
                  remark #15460: masked strided loads: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 36 
                  remark #15477: vector loop cost: 18.500 
                  remark #15478: estimated potential speedup: 1.850 
                  remark #15479: lightweight vector operations: 26 
                  remark #15480: medium-overhead vector operations: 1 
                  remark #15481: heavy-overhead vector operations: 1 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=32
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
         <Remainder>
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=125

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=125

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Peeled>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15399: vectorization support: unroll factor set to 4
                  remark #15300: LOOP WAS VECTORIZED
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15449: unmasked aligned unit stride stores: 1 
                  remark #15460: masked strided loads: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 9 
                  remark #15477: vector loop cost: 14.000 
                  remark #15478: estimated potential speedup: 2.090 
                  remark #15479: lightweight vector operations: 6 
                  remark #15480: medium-overhead vector operations: 1 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=8
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Remainder>
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15388: vectorization support: reference 1697 has aligned access
                  remark #15301: REMAINDER LOOP WAS VECTORIZED
                  remark #25015: Estimate of max trip count of loop=32
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=128
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
      remark #17107: loop was not parallelized: inner loop
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         remark #17107: loop was not parallelized: inner loop
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
            remark #25442: blocked by 250   (pre-vector) 
            remark #25440: unrolled and jammed by 4   (pre-vector) 
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=250

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               remark #25442: blocked by 250   (pre-vector) 
               remark #25440: unrolled and jammed by 4   (pre-vector) 
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=250

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  remark #25442: blocked by 256   (pre-vector) 
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15389: vectorization support: reference evec has unaligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15301: PERMUTED LOOP WAS VECTORIZED
                  remark #15450: unmasked unaligned unit stride loads: 8 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 142 
                  remark #15477: vector loop cost: 40.000 
                  remark #15478: estimated potential speedup: 3.540 
                  remark #15479: lightweight vector operations: 112 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=256
               LOOP END
            LOOP END

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
            <Remainder>
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=250

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Peeled>
                  remark #25015: Estimate of max trip count of loop=256
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15301: PERMUTED LOOP WAS VECTORIZED
                  remark #15442: entire loop may be executed in remainder
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15450: unmasked unaligned unit stride loads: 4 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 36 
                  remark #15477: vector loop cost: 9.000 
                  remark #15478: estimated potential speedup: 3.780 
                  remark #15479: lightweight vector operations: 28 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=256
               LOOP END
            LOOP END
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
         <Remainder>
            remark #15542: loop was not vectorized: inner loop was already vectorized
            remark #25015: Estimate of max trip count of loop=250

            LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               remark #15542: loop was not vectorized: inner loop was already vectorized
               remark #25015: Estimate of max trip count of loop=250

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Peeled>
                  remark #25015: Estimate of max trip count of loop=256
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
                  remark #25085: Preprocess Loopnests: Moving Out Load and Store    [ /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19) ]
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15399: vectorization support: unroll factor set to 4
                  remark #15301: PERMUTED LOOP WAS VECTORIZED
                  remark #15442: entire loop may be executed in remainder
                  remark #15448: unmasked aligned unit stride loads: 1 
                  remark #15450: unmasked unaligned unit stride loads: 1 
                  remark #15475: --- begin vector loop cost summary ---
                  remark #15476: scalar loop cost: 8 
                  remark #15477: vector loop cost: 9.000 
                  remark #15478: estimated potential speedup: 2.870 
                  remark #15479: lightweight vector operations: 7 
                  remark #15488: --- end vector loop cost summary ---
                  remark #25015: Estimate of max trip count of loop=16
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Remainder>
                  remark #15389: vectorization support: reference 1697 has unaligned access
                  remark #15388: vectorization support: reference evec has aligned access
                  remark #15381: vectorization support: unaligned access used inside loop body
                  remark #15301: REMAINDER LOOP WAS VECTORIZED
                  remark #25015: Estimate of max trip count of loop=64
               LOOP END

               LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19)
               <Remainder>
                  remark #25015: Estimate of max trip count of loop=256
               LOOP END
            LOOP END
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(628,3):remark #34026: call to memset implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(645,2):remark #34026: call to memset implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(662,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(665,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,42):remark #34026: call to memset implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(669,19):remark #34026: call to memset implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8):remark #34014: optimization advice for memset: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(711,8):remark #34026: call to memset implemented as a call to optimized library version
===========================================================================

Begin optimization report for: GETDATA

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETDATA) [14/27=51.9%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(408,13)
  -> EXTERN: (408,13) _alloca
  -> EXTERN: (408,13) _alloca
  -> EXTERN: (408,13) __getsp_inlined
  -> (418,9) EVALUATESURFGEN (isz = 2716) (sz = 2729)
     [[ Inlining would exceed -inline-max-total-size value (2716>2000) <2>]]
  -> EXTERN: (419,2) __resetsp_inlined

===========================================================================

Begin optimization report for: EVALUATESURFGEN77

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EVALUATESURFGEN77) [15/27=55.6%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(443,13)
  -> EXTERN: (443,13) _alloca
  -> EXTERN: (443,13) _alloca
  -> EXTERN: (443,13) _alloca
  -> EXTERN: (443,13) _alloca
  -> EXTERN: (443,13) __getsp_inlined
  -> EXTERN: (455,6) for_stop_core
  -> (457,9) EVALUATESURFGEN (isz = 2716) (sz = 2729)
     [[ Inlining would exceed -inline-max-total-size value (2716>2000) <2>]]
  -> EXTERN: (461,2) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between cgeompck line 456 and cgeompck line 456
   remark #17106: parallel dependence: assumed FLOW dependence between cgeompck line 456 and cgeompck line 456
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference cgeompck has aligned access
      remark #15389: vectorization support: reference cgeom has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.250 
      remark #15478: estimated potential speedup: 1.760 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between ed line 458 and ed line 458
   remark #17106: parallel dependence: assumed FLOW dependence between ed line 458 and ed line 458
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between ed line 458 and ed line 458
      remark #17106: parallel dependence: assumed FLOW dependence between ed line 458 and ed line 458
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference ed has aligned access
         remark #15389: vectorization support: reference edpck has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 1.250 
         remark #15478: estimated potential speedup: 3.000 
         remark #15479: lightweight vector operations: 3 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between ga line 459 and ga line 459
   remark #17106: parallel dependence: assumed FLOW dependence between ga line 459 and ga line 459
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between ga line 459 and ga line 459
      remark #17106: parallel dependence: assumed FLOW dependence between ga line 459 and ga line 459
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
         remark #25401: memcopy(with guard) generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed ANTI dependence between ga line 459 and ga line 459
         remark #17106: parallel dependence: assumed FLOW dependence between ga line 459 and ga line 459
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
         <Multiversioned v2>
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference ga has aligned access
            remark #15389: vectorization support: reference gapck has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.250 
            remark #15478: estimated potential speedup: 3.000 
            remark #15479: lightweight vector operations: 3 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
   remark #25101: Loop Interchange not done due to: Original Order seems proper
   remark #25452: Original Order found to be proper, but by a close margin
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gd line 460 and gd line 460
   remark #17106: parallel dependence: assumed FLOW dependence between gd line 460 and gd line 460
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between gd line 460 and gd line 460
      remark #17106: parallel dependence: assumed FLOW dependence between gd line 460 and gd line 460
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
         remark #25401: memcopy(with guard) generated
         remark #17104: loop was not parallelized: existence of parallel dependence
         remark #17106: parallel dependence: assumed ANTI dependence between gd line 460 and gd line 460
         remark #17106: parallel dependence: assumed FLOW dependence between gd line 460 and gd line 460
         remark #15542: loop was not vectorized: inner loop was already vectorized

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
         <Peeled, Multiversioned v2>
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
         <Multiversioned v2>
            remark #17108: loop was not parallelized: insufficient computational work
            remark #15388: vectorization support: reference gd has aligned access
            remark #15389: vectorization support: reference gdpck has unaligned access
            remark #15381: vectorization support: unaligned access used inside loop body
            remark #15300: LOOP WAS VECTORIZED
            remark #15442: entire loop may be executed in remainder
            remark #15449: unmasked aligned unit stride stores: 1 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 4 
            remark #15477: vector loop cost: 1.250 
            remark #15478: estimated potential speedup: 3.000 
            remark #15479: lightweight vector operations: 3 
            remark #15488: --- end vector loop cost summary ---
         LOOP END

         LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4)
         <Remainder, Multiversioned v2>
         LOOP END
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(456,4):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(458,4):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(459,4):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(460,4):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: POT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (POT) [16/27=59.3%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(475,12)
  -> EXTERN: (475,12) _alloca
  -> EXTERN: (475,12) _alloca
  -> EXTERN: (475,12) _alloca
  -> EXTERN: (475,12) _alloca
  -> EXTERN: (475,12) __getsp_inlined
  -> (488,8) EVALUATESURFGEN (isz = 2716) (sz = 2729)
     [[ Inlining would exceed -inline-max-total-size value (2716>2000) <2>]]
  -> EXTERN: (510,1) __resetsp_inlined


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gv1 line 491 and gv1 line 491
   remark #17106: parallel dependence: assumed FLOW dependence between gv1 line 491 and gv1 line 491
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference gv1 has unaligned access
      remark #15388: vectorization support: reference cgrads has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gv2 line 492 and gv2 line 492
   remark #17106: parallel dependence: assumed FLOW dependence between gv2 line 492 and gv2 line 492
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gv2 has aligned access
      remark #15389: vectorization support: reference cgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gv12 line 493 and gv12 line 493
   remark #17106: parallel dependence: assumed FLOW dependence between gv12 line 493 and gv12 line 493
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gv12 has aligned access
      remark #15389: vectorization support: reference cgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu22 line 498 and gu22 line 498
   remark #17106: parallel dependence: assumed FLOW dependence between gu22 line 498 and gu22 line 498
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference gu22 has unaligned access
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu12 line 499 and gu12 line 499
   remark #17106: parallel dependence: assumed FLOW dependence between gu12 line 499 and gu12 line 499
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gu12 has aligned access
      remark #15389: vectorization support: reference dcgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu11 line 500 and gu11 line 500
   remark #17106: parallel dependence: assumed FLOW dependence between gu11 line 500 and gu11 line 500
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gu11 has aligned access
      remark #15389: vectorization support: reference dcgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu11 line 505 and gu11 line 505
   remark #17106: parallel dependence: assumed FLOW dependence between gu11 line 505 and gu11 line 505
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15389: vectorization support: reference gu11 has unaligned access
      remark #15388: vectorization support: reference dcgrads has aligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.750 
      remark #15478: estimated potential speedup: 1.440 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu12 line 506 and gu12 line 506
   remark #17106: parallel dependence: assumed FLOW dependence between gu12 line 506 and gu12 line 506
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gu12 has aligned access
      remark #15389: vectorization support: reference dcgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5)
   remark #25401: memcopy(with guard) generated
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between gu22 line 507 and gu22 line 507
   remark #17106: parallel dependence: assumed FLOW dependence between gu22 line 507 and gu22 line 507
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5)
   <Peeled, Multiversioned v2>
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5)
   <Multiversioned v2>
      remark #17108: loop was not parallelized: insufficient computational work
      remark #15388: vectorization support: reference gu22 has aligned access
      remark #15389: vectorization support: reference dcgrads has unaligned access
      remark #15381: vectorization support: unaligned access used inside loop body
      remark #15300: LOOP WAS VECTORIZED
      remark #15442: entire loop may be executed in remainder
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.250 
      remark #15478: estimated potential speedup: 3.000 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5)
   <Remainder, Multiversioned v2>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(491,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(492,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(493,3):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(498,5):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(499,5):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(500,5):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(505,5):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(506,5):remark #34026: call to memcpy implemented as a call to optimized library version
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(507,5):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: GETEVEC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETEVEC) [17/27=63.0%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(512,12)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3)
   remark #17104: loop was not parallelized: existence of parallel dependence
   remark #17106: parallel dependence: assumed ANTI dependence between evec line 516 and evec line 516
   remark #17106: parallel dependence: assumed FLOW dependence between evec line 516 and evec line 516
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3)
      remark #25401: memcopy(with guard) generated
      remark #17104: loop was not parallelized: existence of parallel dependence
      remark #17106: parallel dependence: assumed ANTI dependence between evec line 516 and evec line 516
      remark #17106: parallel dependence: assumed FLOW dependence between evec line 516 and evec line 516
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3)
      <Peeled, Multiversioned v2>
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3)
      <Multiversioned v2>
         remark #17108: loop was not parallelized: insufficient computational work
         remark #15388: vectorization support: reference evec has aligned access
         remark #15389: vectorization support: reference potdata_mp_evecstore_ has unaligned access
         remark #15381: vectorization support: unaligned access used inside loop body
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15450: unmasked unaligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 4 
         remark #15477: vector loop cost: 2.250 
         remark #15478: estimated potential speedup: 1.720 
         remark #15479: lightweight vector operations: 2 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3)
      <Remainder, Multiversioned v2>
      LOOP END
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3):remark #34014: optimization advice for memcpy: increase the destination's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3):remark #34014: optimization advice for memcpy: increase the source's alignment to 16 (and use __assume_aligned) to speed up library implementation
/global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(516,3):remark #34026: call to memcpy implemented as a call to optimized library version
===========================================================================

Begin optimization report for: ENABLEENERGYSCALING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ENABLEENERGYSCALING) [18/27=66.7%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(519,12)

===========================================================================

Begin optimization report for: DISABLEENERGYSCALING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (DISABLEENERGYSCALING) [19/27=70.4%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(523,12)

===========================================================================

Begin optimization report for: GETENERGY

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETENERGY) [20/27=74.1%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(779,12)
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) _alloca
  -> EXTERN: (779,12) __getsp_inlined
  -> EXTERN: (803,8) for_write_seq_lis
  -> INLINE: (804,13) PREPOT (isz = 288) (sz = 291)
    -> EXTERN: (355,6) for_write_seq_lis
    -> EXTERN: (357,11) getver_
    -> EXTERN: (359,6) for_write_seq_fmt
    -> EXTERN: (359,6) for_write_seq_fmt_xmit
    -> EXTERN: (359,39) for_trim
    -> (360,11) READGINPUT (isz = 981) (sz = 986)
       [[ Inlining would exceed -inline-max-size value (986>230) <1>]]
    -> EXTERN: (361,11) initialize_
    -> (363,18) LOADREFGEOMS (isz = 1028) (sz = 1031)
       [[ Inlining would exceed -inline-max-size value (1031>230) <1>]]
    -> EXTERN: (364,30) for_dealloc_allocatable
    -> EXTERN: (365,6) for_check_mult_overflow64
    -> EXTERN: (365,6) for_alloc_allocatable
    -> (368,17) OPENTRAJFILE (isz = 503) (sz = 508)
       [[ Inlining would exceed -inline-max-size value (508>230) <1>]]
    -> EXTERN: (371,15) GETFLUNIT
    -> EXTERN: (372,9) for_open
    -> EXTERN: (373,9) for_write_seq_fmt
    -> EXTERN: (374,9) for_write_seq_fmt
    -> EXTERN: (378,6) for_write_seq_lis
    -> (382,11) INIT (isz = 324) (sz = 329)
       [[ Inlining would exceed -inline-max-size value (329>230) <1>]]
    -> EXTERN: (383,6) for_write_seq_lis
    -> INLINE: (385,11) RESETEVALCOUNT (isz = 2) (sz = 5)
  -> EXTERN: (806,8) buildwbmat_
  -> EXTERN: (808,8) MAKEHMAT
  -> EXTERN: (810,8) dsyevr_
  -> EXTERN: (813,1) __resetsp_inlined

===========================================================================

Begin optimization report for: PAUSEPARSING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (PAUSEPARSING) [21/27=77.8%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(816,12)

===========================================================================

Begin optimization report for: RESUMEPARSING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (RESUMEPARSING) [22/27=81.5%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(821,12)

===========================================================================

Begin optimization report for: ENABLEPARSING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (ENABLEPARSING) [23/27=85.2%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(826,12)

===========================================================================

Begin optimization report for: DISABLEPARSING

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (DISABLEPARSING) [24/27=88.9%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(830,12)

===========================================================================

Begin optimization report for: SETTRAJDATA

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (SETTRAJDATA) [25/27=92.6%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(971,12)

===========================================================================

Begin optimization report for: GETINFO

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETINFO) [26/27=96.3%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(982,12)

===========================================================================

Begin optimization report for: GETNEIGHBOR

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GETNEIGHBOR) [27/27=100.0%] /global/project/projectdirs/m1778/malbon/surfgen/surfgen-edison/source/potlib.f90(993,12)

===========================================================================

    Report from: Interprocedural optimizations [ipo]

INLINING FOOTNOTES:

<1> The subprogram is larger than the inliner would normally inline.  Use the
    option -inline-max-size to increase the size of any subprogram that would
    normally be inlined, add "!DIR$ATTRIBUTES FORCEINLINE" to the
    declaration of the called function, or add "!DIR$ FORCEINLINE" before
    the call site.

<2> Inlining this subprogram at this call site would increase the size of the 
    caller more than is currently acceptable. Use the option 
    -inline-max-total-size to increase the size that all subprograms can 
    grow through inlining, add "!DIR$ATTRIBUTES OPTIMIZATION_PARAMETER:
    "INLINE_MAX_PER_ROUTINE"" to the caller, add "!DIR$ATTRIBUTES FORCEINLINE"
    to the declaration of the called subprogram, or add "!DIR$ FORCEINLINE" 
    before the call site.

